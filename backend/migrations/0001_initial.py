# Generated by Django 4.0.1 on 2022-02-12 20:59

import backend.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bodegacoins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=300)),
            ],
        ),
        migrations.CreateModel(
            name='Chat_Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='Unnamed-Secure-Room')),
                ('desc', models.TextField(default='Why was this room created?')),
                ('rules', models.TextField(default='Your room, Your rules')),
                ('type_of_room', models.TextField(choices=[('CLOSED-SECURE-ROOM', 'CLOSED-SECURE-ROOM'), ('OPEN-SECURE-ROOM', 'OPEN-SECURE-ROOM'), ('INITIATE-ROOM-TERMINATION', 'INITIATE-ROOM-TERMINATION')])),
                ('created_on', models.DateField()),
                ('modified_on', models.DateTimeField()),
                ('is_room_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('discount_percent', models.FloatField(default=0.0)),
                ('active_status', models.BooleanField(default=False)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='MetaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_username', models.TextField(default='username_not_defined', unique=True)),
                ('password', models.TextField(default='Go for easy 4-digit numeric code - which is not obvious.', unique=True)),
                ('hashkey', models.TextField(default=backend.models.hashkey_generator, unique=True)),
                ('email', models.EmailField(default='fakeemailaddress@somewebsite.com', max_length=254)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Order_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(default=0.0)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Product_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.TextField(choices=[('SHIRTS', 'SHIRTS'), ('BOTTOMS', 'BOTTOMS'), ('SNEAKERS', 'SNEAKERS'), ('THERMALS', 'THERMALS'), ('SHORTS', 'SHORTS'), ('HOME-DECOR', 'HOME-DECOR'), ('DIGITAL-ART', 'DIGITAL-ART'), ('MUSIC-FILE', 'MUSIC-FILE'), ('COLLECTIBLES', 'COLLECTIBLES'), ('PHYSICAL-ACCESSORIES', 'PHYSICAL-ACCESSORIES'), ('DIGITAL-ACCESSORIES', 'DIGITAL-ACCESSORIES'), ('POTRAIT-VIDEO-FILE', 'POTRAIT-VIDEO-FILE')])),
                ('category_desc', models.TextField(default='Describe your creation.')),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('category_image1', models.FileField(upload_to='category/category_image1')),
                ('category_image2', models.FileField(upload_to='category/category_image2')),
                ('category_image3', models.FileField(upload_to='category/category_image3')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Themes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_name', models.TextField(default='Collection Name')),
                ('collection_desc', models.TextField(default='Collection Decsription')),
                ('audience_traits', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=10)),
                ('marketing_funnel', models.TextField(choices=[('Community', 'Creator-Community'), ('Performance-ADs', 'Performance-ADs-IG/FB'), ('Influencer-Marketing', 'Influencer-Marketing')])),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_role', models.TextField(default='User')),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('digital_base_personality', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=8)),
                ('digital_future_personality', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=8)),
                ('about_you_belief', models.TextField(choices=[('1', 'I believe that people or organizations cant be trusted with anything'), ('2', 'I believe that nowadays, free will is fucking hard.'), ('3', 'I believe that anonymity gives me power to create wihout fear of failure.'), ('4', 'I believe that we all are special in some way - Genetic mutations'), ('5', 'I believe that our society is all about conformism & accumulation of material-shit'), ('6', 'I believe that these questions are pointless.')])),
                ('about_you_belief2', models.TextField(choices=[('1', 'I believe that people or organizations cant be trusted with anything'), ('2', 'I believe that nowadays, free will is fucking hard.'), ('3', 'I believe that anonymity gives me power to create wihout fear of failure.'), ('4', 'I believe that we all are special in some way - Genetic mutations'), ('5', 'I believe that our society is all about conformism & accumulation of material-shit'), ('6', 'I believe that these questions are pointless.')])),
                ('about_you_disbelief', models.TextField(choices=[('1', 'I dont belief in the concept of banks, goverments, race, color, religion because these myths stop us from questioning who we truly are'), ('2', 'I dont belief that any government cares about the Libyan slavery crisis'), ('3', 'I dont belief in Mars colonization, I think we should all work to fix mother earth.'), ('4', 'I dont belief in the concept of monogamous relationships'), ('5', 'I dont belief that people understand others perspectives.'), ('6', 'I dont belief in anything.')])),
                ('why_did_you_join_bodega', models.TextField(choices=[('Anonymity', 'Anonymity'), ('Creative-Freedom', 'Creative-Freedom'), ('Create-Digital-Art', 'Create-Digital-Art'), ('Connect-With-Global-Audience', 'Connect-With-Global-Audience'), ('All-of-the-above', 'All-of-the-above'), ('Just-Browsing', 'Just-Browsing')])),
                ('explore_bodega_preferences', models.TextField(choices=[('Exploring-Fashion/Music', 'Exploring-Fashion/Music'), ('Exploring-Digital-Art', 'Exploring-Digital-Art'), ('Surprise-Me', 'Suprise-Me')])),
                ('member_feedback_preferences', models.TextField(default='Cant find what you love? Type away and we will get to work')),
                ('feedback_bodega', models.TextField(choices=[('ITS-CONFUSING', 'ITS-CONFUSING'), ('NO-OPINION-YET', 'NO-OPINION-YET'), ('IT-EXCITES-ME', 'IT-EXCITES-ME')])),
                ('describe_yourself', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=10)),
                ('shoe_size', models.FloatField(default=11.5)),
                ('waist_size', models.TextField(default='[XL, 36]')),
                ('chest_size', models.TextField(default='[XL, 30Inch]')),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='User_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.TextField()),
                ('payment_provider', models.TextField(default='STRIPE')),
                ('payment_status', models.BooleanField(default=False)),
                ('total_money_out', models.FloatField(default=0.0)),
                ('total_money_in', models.FloatField(default=0.0)),
                ('user_payment_profile_status', models.BooleanField(default=False)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='User_Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.TextField()),
                ('address_line2', models.TextField()),
                ('address_state', models.TextField()),
                ('city', models.TextField()),
                ('postal_code', models.TextField()),
                ('country', models.TextField()),
                ('planet', models.TextField(default='Earth')),
                ('cell_phone', models.TextField(default='0000')),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('following', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=30)),
                ('followers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=30)),
                ('makeprofileprivate', models.BooleanField(default=False)),
                ('saved_content', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=500)),
                ('likes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=200)),
                ('dislikes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=200)),
                ('comments', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=200)),
                ('products_clickedOn', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=500)),
                ('bio', models.TextField()),
                ('blocked_list', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=200)),
                ('data_mining_status', models.BooleanField(default=False)),
                ('account_active', models.BooleanField(default=True)),
                ('delete_metauser', models.BooleanField(default=False)),
                ('created_on', models.DateField()),
                ('modified_on', models.DateTimeField()),
                ('bodegacoins_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.bodegacoins')),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Shopping_Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(default=0.0)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Shop_Payout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_detail_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.order_detail')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_products', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=200)),
                ('all_user_data', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=100)),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('logo', models.FileField(upload_to='shop-details/profile_picture')),
                ('cover_image', models.FileField(default='EMPTY', upload_to='shop-details/profile_cover_image')),
                ('address_line1', models.TextField()),
                ('address_line2', models.TextField()),
                ('address_state', models.TextField()),
                ('city', models.TextField()),
                ('state', models.TextField(default='NY')),
                ('postal_code', models.TextField()),
                ('country', models.TextField(choices=[('INDIA', 'IN'), ('USA', 'US')])),
                ('shop_traits', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=50)),
                ('assistance_ask', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=20)),
                ('uniquesellingprop', models.TextField(default='Why your meta-shop is special than others?')),
                ('data_mining_status', models.BooleanField(default=False)),
                ('created_on', models.DateField()),
                ('modified_on', models.DateTimeField()),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='No Product Name, yet', unique=True)),
                ('description', models.TextField(default='Explain your creation in great poetic detail.')),
                ('selling_price', models.FloatField(default=0.0)),
                ('discounted_price', models.FloatField(default=0.0)),
                ('price', models.FloatField(default=0.0)),
                ('quantity', models.IntegerField(default=0)),
                ('total_sales', models.FloatField(default=0.0)),
                ('clicks_on_product', models.IntegerField()),
                ('is_product_digital', models.BooleanField(default=False)),
                ('is_product_sharable', models.BooleanField(default=False)),
                ('product_unique_traits', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=15)),
                ('customer_unique_traits', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=15)),
                ('nsfw_content', models.BooleanField(default=False)),
                ('production_cost', models.FloatField(default=0.0)),
                ('production_time_days', models.IntegerField()),
                ('hours_invested', models.FloatField(default=1.0)),
                ('encrypt_product', models.BooleanField(default=False)),
                ('unit_sold_expectation', models.IntegerField(default=0)),
                ('size_chart', models.FileField(upload_to='product/size_chart')),
                ('product_image1', models.FileField(upload_to='product/product_image1')),
                ('product_image2', models.FileField(default=None, upload_to='product/product_image2')),
                ('product_image3', models.FileField(default=None, upload_to='product/product_image3')),
                ('hashkey', models.TextField(default=backend.models.hashkey_generator, unique=True)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
                ('discount_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.discount')),
                ('product_categoryID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product_category')),
                ('product_themesID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product_themes')),
                ('shop_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shop')),
            ],
        ),
        migrations.CreateModel(
            name='Particpant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_room_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.chat_room')),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Order_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('order_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.order_detail')),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
            ],
        ),
        migrations.AddField(
            model_name='order_detail',
            name='payment_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user_payment'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_body', models.TextField()),
                ('upload_file', models.FileField(default=None, upload_to='user_meta_key/message/files')),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('hashkey', models.TextField(default=backend.models.hashkey_generator, unique=True)),
                ('chat_room_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.chat_room')),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.AddField(
            model_name='discount',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser'),
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='Your campaign definition')),
                ('description', models.TextField(default='Describe your campaign')),
                ('creator_collab_choice', models.TextField(choices=[('FIXED-PAYMENT', 'FIXED-PAYMENT'), ('BARTER-DEAL', 'BARTER-DEAL'), ('COMMISSION-%-ON-SALES', 'COMMISSION-%-ON-SALES'), ('FREE-HELP-FROM-THE-COMMUNITY', 'FREE-HELP-FROM-THE-COMMUNITY')])),
                ('creator_pitch', models.TextField()),
                ('bid_type', models.TextField(choices=[('FIXED-PAYMENT', 'FIXED-PAYMENT'), ('BARTER-DEAL', 'BARTER-DEAL'), ('COMMISSION-%-ON-SALES', 'COMMISSION-%-ON-SALES'), ('FREE-HELP-FROM-THE-COMMUNITY', 'FREE-HELP-FROM-THE-COMMUNITY')])),
                ('bid_amount', models.FloatField(default=0.0)),
                ('accept_bid', models.BooleanField(default=False)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('shop_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shop')),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Cart_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quanity', models.IntegerField(default=0)),
                ('created_at', models.DateField()),
                ('modified_at', models.DateTimeField()),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('session_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shopping_session')),
            ],
        ),
    ]
