# Generated by Django 4.0.1 on 2022-06-30 21:45

import backend.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BLAScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReviewCycleNo', models.FloatField(default=1.0)),
                ('current_score', models.FloatField(default=3.0)),
                ('predicted_score', models.FloatField(default=3.0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bodegacoins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=300)),
            ],
        ),
        migrations.CreateModel(
            name='BodegaDept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departmentname', models.TextField(choices=[('SUDO', 'SUDO'), ('SysOps', 'SysOps'), ('FinLe', 'FinLe')])),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BodegaVision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_metadata', models.JSONField(blank=True, null=True)),
                ('video_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BoostTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=11)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('desc', models.TextField(default='Why was this room created?')),
                ('tags', models.TextField(default='#ROOM')),
                ('type_of_room', models.TextField(choices=[('CLOSED-SECURE-ROOM', 'CLOSED-SECURE-ROOM'), ('OPEN-SECURE-ROOM', 'OPEN-SECURE-ROOM'), ('INITIATE-ROOM-TERMINATION', 'INITIATE-ROOM-TERMINATION')])),
                ('isRoomPrivate', models.BooleanField(default=True)),
                ('room_hashkey', models.TextField(default=backend.models.chatroom_hashkey_generator, unique=True)),
                ('modified_on', models.DateTimeField(auto_now_add=True)),
                ('created_on', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='customerPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='John Doe', max_length=255)),
                ('email', models.CharField(default='johndoe@email.com', max_length=255)),
                ('customerID', models.CharField(max_length=500)),
                ('paymentMethodID', models.CharField(max_length=500)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('discount_percent', models.FloatField(default=0.0)),
                ('active_status', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.FloatField(default=3.0)),
            ],
        ),
        migrations.CreateModel(
            name='MetaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_username', models.TextField(default='username_not_defined', unique=True)),
                ('passcode', models.TextField(unique=True)),
                ('private_hashkey', models.TextField(default=backend.models.private_metauser_hashkey_generator, unique=True)),
                ('public_hashkey', models.TextField(default=backend.models.public_metauser_hashkey_generator, unique=True)),
                ('discord_username', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MunchiesPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('munchiesPageName', models.CharField(max_length=255)),
                ('munchiesCoverImage', models.FileField(upload_to='munchies/coverImage')),
                ('munchiesPageViews', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(default=0.0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productName', models.TextField(max_length=15, unique=True)),
                ('producDescription', models.CharField(max_length=300)),
                ('sellingPrice', models.FloatField(default=0.0)),
                ('discounted_price', models.FloatField(default=0.0)),
                ('quantity', models.IntegerField(default=0)),
                ('subscriptionProduct', models.BooleanField(default=False)),
                ('privateProduct', models.BooleanField(default=False)),
                ('size_chart', models.FileField(default='https://bdgdaostorage.blob.core.windows.net/media/product/product_image1/white-transparent-bdga.png', upload_to='product/size_chart')),
                ('product_image1', models.FileField(default='https://bdgdaostorage.blob.core.windows.net/media/product/product_image1/white-transparent-bdga.png', upload_to='product/product_image1')),
                ('product_image2', models.FileField(default='https://bdgdaostorage.blob.core.windows.net/media/product/product_image1/white-transparent-bdga.png', upload_to='product/product_image2')),
                ('product_image3', models.FileField(default='https://bdgdaostorage.blob.core.windows.net/media/product/product_image1/white-transparent-bdga.png', upload_to='product/product_image3')),
                ('product_image4', models.FileField(default='https://bdgdaostorage.blob.core.windows.net/media/product/product_image1/white-transparent-bdga.png', upload_to='product/product_image4')),
                ('productHashkey', models.TextField(default=backend.models.product_hashkey_generator, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('boostTagsID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.boosttags')),
                ('discount_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.discount')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.TextField(choices=[('SHIRTS', 'SHIRTS'), ('BOTTOMS', 'BOTTOMS'), ('SNEAKERS', 'SNEAKERS'), ('THERMALS', 'THERMALS'), ('SHORTS', 'SHORTS'), ('HOME-DECOR', 'HOME-DECOR'), ('DIGITAL-ART', 'DIGITAL-ART'), ('MUSIC-FILE', 'MUSIC-FILE'), ('COLLECTIBLES', 'COLLECTIBLES'), ('PHYSICAL-ACCESSORIES', 'PHYSICAL-ACCESSORIES'), ('DIGITAL-ACCESSORIES', 'DIGITAL-ACCESSORIES'), ('POTRAIT-VIDEO-FILE', 'POTRAIT-VIDEO-FILE')])),
                ('category_desc', models.TextField(default='Describe your creation.')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('category_image1', models.FileField(upload_to='category/category_image1')),
                ('category_image2', models.FileField(upload_to='category/category_image2')),
                ('category_image3', models.FileField(upload_to='category/category_image3')),
            ],
        ),
        migrations.CreateModel(
            name='SentinoInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata2', models.JSONField(blank=True, null=True)),
                ('content_metadata3', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SentinoItemClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata2', models.JSONField(blank=True, null=True)),
                ('content_metadata3', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SentinoItemProjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata2', models.JSONField(blank=True, null=True)),
                ('content_metadata3', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SentinoItemProximity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata2', models.JSONField(blank=True, null=True)),
                ('content_metadata3', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SentinoProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata2', models.JSONField(blank=True, null=True)),
                ('content_metadata3', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SentinoSelfDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('content_metadata2', models.JSONField(blank=True, null=True)),
                ('content_metadata3', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_products', models.JSONField(blank=True, null=True)),
                ('all_user_data', models.JSONField(blank=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('logo', models.FileField(upload_to='shop-details/profile_picture')),
                ('cover_image', models.FileField(default='EMPTY', upload_to='shop-details/profile_cover_image')),
                ('address_line1', models.TextField()),
                ('address_line2', models.TextField()),
                ('address_state', models.TextField()),
                ('city', models.TextField()),
                ('state', models.TextField(default='NY')),
                ('postal_code', models.TextField()),
                ('country', models.TextField(choices=[('INDIA', 'IN'), ('USA', 'US')])),
                ('bodega_vision_tags', models.JSONField(blank=True, null=True)),
                ('bodega_customer_tags', models.JSONField(blank=True, null=True)),
                ('uniquesellingprop', models.TextField(default='Why your meta-shop is special than others?')),
                ('data_mining_status', models.BooleanField(default=False)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Solomonv0',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psy_traits', models.JSONField(blank=True, null=True)),
                ('engagement_traits', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='stripeAccountBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=0.0)),
                ('currency', models.TextField()),
                ('pendingAmount', models.FloatField(default=0.0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='stripeAccountInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripeAccountID', models.CharField(max_length=400, unique=True)),
                ('businessType', models.CharField(default='Digital Services', max_length=300)),
                ('businessName', models.CharField(blank=True, max_length=255)),
                ('businessDescription', models.CharField(blank=True, max_length=255)),
                ('businessCity', models.CharField(blank=True, max_length=255)),
                ('businessCountry', models.CharField(blank=True, max_length=255)),
                ('businessLine1', models.CharField(blank=True, max_length=255)),
                ('businessLine2', models.CharField(blank=True, max_length=255)),
                ('businessPostalCode', models.CharField(blank=True, max_length=255)),
                ('businessEmail', models.CharField(blank=True, max_length=255)),
                ('businessBankName', models.CharField(blank=True, max_length=255)),
                ('businessPhone', models.CharField(blank=True, max_length=255)),
                ('businessURL', models.CharField(blank=True, max_length=255)),
                ('businessLogo', models.ImageField(blank=True, upload_to='')),
                ('accountPaymentStatus', models.CharField(blank=True, max_length=255)),
                ('accountTransfersStatus', models.CharField(blank=True, max_length=255)),
                ('accountCurrency', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='SysOpsAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_hashkey', models.TextField(default=backend.models.agent_hashkey_generator, unique=True)),
                ('bio', models.TextField(default='I am Bodega')),
                ('reporting_officer', models.TextField(default='PASTE PUBLIC METAUSER HASHKEY')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('departmentID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.bodegadept')),
                ('levelID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.level')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_role', models.TextField(default='Creator')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('bodega_vision_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.bodegavision')),
                ('level_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.level')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
                ('solomon_person_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.solomonv0')),
            ],
        ),
        migrations.CreateModel(
            name='UserPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.TextField()),
                ('stripeAccountID', models.TextField(default='Project-Bodega Member Stripe Account ID')),
                ('total_money_out', models.FloatField(default=0.0)),
                ('total_money_in', models.FloatField(default=0.0)),
                ('user_payment_profile_status', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.TextField()),
                ('address_line2', models.TextField()),
                ('address_state', models.TextField()),
                ('city', models.TextField()),
                ('postal_code', models.TextField()),
                ('country', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='SysOpsSupplyNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opsec_agent_hashkey', models.TextField(default='AGENT HASHKEY')),
                ('name', models.TextField(default='JOHN')),
                ('location', models.TextField(default='New York BABY')),
                ('status', models.BooleanField(default=True)),
                ('tokens_allocated', models.FloatField(default=1.0)),
                ('creator_hypothesis', models.TextField(default='CREATORS PERSPECTIVE')),
                ('sysops_agent_hypothesis', models.TextField(default='SysOp Agent PERSPECTIVE')),
                ('creator_identity_status', models.BooleanField(default=False)),
                ('all_digital_url', models.JSONField(blank=True, null=True)),
                ('influence_size', models.JSONField(blank=True, null=True)),
                ('genre', models.JSONField(blank=True, null=True)),
                ('category_vertical', models.JSONField(blank=True, null=True)),
                ('category_vertical2', models.JSONField(blank=True, null=True)),
                ('product_traits', models.JSONField(blank=True, null=True)),
                ('creator_traits', models.JSONField(blank=True, null=True)),
                ('production_type', models.JSONField(blank=True, null=True)),
                ('current_revenue', models.JSONField(blank=True, null=True)),
                ('current_aov', models.JSONField(blank=True, null=True)),
                ('predicted_revenue', models.JSONField(blank=True, null=True)),
                ('creator_audience_traits', models.JSONField(blank=True, null=True)),
                ('sysops_solution_hypothesis', models.JSONField(blank=True, null=True)),
                ('additional_notes', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('bla_ScoreID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.blascore')),
                ('supply_metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
                ('supply_shopID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.shop')),
            ],
        ),
        migrations.CreateModel(
            name='SysOpsProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='Project Name')),
                ('problem_statement', models.CharField(default='140 Characters', max_length=300)),
                ('problem_impact_size', models.CharField(default='140 Characters', max_length=300)),
                ('hypothesis', models.TextField()),
                ('key_performance_indicators', models.TextField()),
                ('status', models.TextField(choices=[('SUCCESS', 'SUCCESS'), ('WIP', 'WIP'), ('FAILED', 'FAILED')])),
                ('ttc_hours', models.FloatField(default=1.0)),
                ('allocated_ttc_hours', models.FloatField(default=5.0)),
                ('tasks', models.JSONField(blank=True, null=True)),
                ('team_hashkey_json', models.JSONField(blank=True, null=True)),
                ('hashkey', models.TextField(default=backend.models.project_hashkey_generator, unique=True)),
                ('genesis_project_hashkey', models.JSONField(blank=True, null=True)),
                ('parent_project_hashkey', models.JSONField(blank=True, null=True)),
                ('child_project_hashkey', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('divisionID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.bodegadept')),
                ('levelID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.level')),
                ('owner_agentID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.sysopsagent')),
                ('owner_metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='SysOpsDemandNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opsec_agent_hashkey', models.TextField(default='AGENT HASHKEY')),
                ('name', models.TextField(default='JOHN')),
                ('location', models.TextField(default='New York BABY')),
                ('status', models.BooleanField(default=True)),
                ('tokens_allocated', models.FloatField(default=1.0)),
                ('creator_hypothesis', models.TextField(default='CREATORS PERSPECTIVE')),
                ('sysops_agent_hypothesis', models.TextField(default='SysOp Agent PERSPECTIVE')),
                ('creator_identity_status', models.BooleanField(default=False)),
                ('all_digital_url', models.JSONField(blank=True, null=True)),
                ('influence_size', models.JSONField(blank=True, null=True)),
                ('genre', models.JSONField(blank=True, null=True)),
                ('category_vertical', models.JSONField(blank=True, null=True)),
                ('category_vertical2', models.JSONField(blank=True, null=True)),
                ('product_traits', models.JSONField(blank=True, null=True)),
                ('creator_traits', models.JSONField(blank=True, null=True)),
                ('production_type', models.JSONField(blank=True, null=True)),
                ('current_revenue', models.JSONField(blank=True, null=True)),
                ('predicted_revenue', models.JSONField(blank=True, null=True)),
                ('creator_audience_traits', models.JSONField(blank=True, null=True)),
                ('sysops_solution_hypothesis', models.JSONField(blank=True, null=True)),
                ('additional_notes', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('bla_ScoreID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.blascore')),
                ('demand_metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='SysOpsAgentRepo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_hashkey', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
                ('sysops_agentID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.sysopsagent')),
            ],
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerID', models.CharField(max_length=400)),
                ('priceID', models.CharField(max_length=400)),
                ('subscriptionID', models.CharField(max_length=400)),
                ('productID', models.CharField(max_length=400)),
                ('amount', models.IntegerField(default=0)),
                ('invoiceID', models.CharField(max_length=400)),
                ('status', models.CharField(max_length=400)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='stripeCharges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripeChargeID', models.CharField(max_length=300)),
                ('stripeCustomerID', models.CharField(max_length=400)),
                ('stripePaymentMethodID', models.CharField(blank=True, default='None', max_length=400)),
                ('amount', models.FloatField(default=0.0)),
                ('currency', models.TextField(default='us')),
                ('description', models.CharField(max_length=400)),
                ('capturedStatus', models.BooleanField(default=False)),
                ('paymentStatus', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('bodegaCustomerID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.customerpayment')),
            ],
        ),
        migrations.CreateModel(
            name='stripeAccountTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionID', models.CharField(max_length=500)),
                ('payoutAmount', models.FloatField(default=0.0)),
                ('payoutOrderInfo', models.CharField(max_length=255)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateField(auto_now=True)),
                ('stripeAccountInfoID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.stripeaccountinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('following', models.JSONField(blank=True, null=True)),
                ('followers', models.JSONField(blank=True, null=True)),
                ('makeprofileprivate', models.BooleanField(default=False)),
                ('saved_content', models.JSONField(blank=True, null=True)),
                ('likes', models.JSONField(blank=True, null=True)),
                ('dislikes', models.JSONField(blank=True, null=True)),
                ('comments', models.JSONField(blank=True, null=True)),
                ('products_clickedOn', models.JSONField(blank=True, null=True)),
                ('bio', models.TextField()),
                ('blocked_list', models.JSONField(blank=True, null=True)),
                ('data_mining_status', models.BooleanField(default=False)),
                ('account_active', models.BooleanField(default=True)),
                ('delete_metauser', models.BooleanField(default=False)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(default=0.0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
            ],
        ),
        migrations.CreateModel(
            name='ShopPayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_detail_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.orderdetail')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberoflikes', models.IntegerField(default=0)),
                ('numberofdislikes', models.IntegerField(default=0)),
                ('numberofcomments', models.IntegerField(default=0)),
                ('numberofclicks', models.IntegerField(default=0)),
                ('totaltimespentonproduct_hours', models.IntegerField(default=0)),
                ('metauserID_of_likes', models.JSONField(blank=True, null=True)),
                ('metauserID_of_dislikes', models.JSONField(blank=True, null=True)),
                ('metauserID_of_comments', models.JSONField(blank=True, null=True)),
                ('total_sales', models.FloatField(default=0.0)),
                ('clicks_on_product', models.IntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('productID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_categoryID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='shop_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shop'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_room_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.chatroom')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='OrderSuccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripeChargeID', models.TextField(blank=True)),
                ('orderCompleted', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
                ('order_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.orderdetail')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
                ('order_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.orderdetail')),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderFailure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripeChargeID', models.TextField(blank=True)),
                ('orderCompleted', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
                ('order_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.orderdetail')),
            ],
        ),
        migrations.AddField(
            model_name='orderdetail',
            name='payment_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.userpayment'),
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=400)),
                ('image', models.FileField(default='https://bdgdaostorage.blob.core.windows.net/media/product/product_image1/white-transparent-bdga.png', upload_to='notifications/image_metadata')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='MunchiesVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('munchiesVideo', models.FileField(upload_to='munchies/videos')),
                ('munchiesCaption', models.CharField(max_length=200)),
                ('munchiesVideoTags', models.CharField(max_length=200)),
                ('munchiesDislikes', models.IntegerField(default=0)),
                ('munchiesVideoViews', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('munchiesPageID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.munchiespage')),
            ],
        ),
        migrations.CreateModel(
            name='MetaUserTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metauserStatus', models.CharField(default='ACTIVE GUEST CREATOR', max_length=255)),
                ('trophiesAllocated', models.TextField(default='BABYSTEPS REVOLUTIONARY')),
                ('projectBodegaLogo', models.ImageField(default='https://bdgdaostorage.blob.core.windows.net/media/bodegaLogoBackend.jpeg', upload_to='')),
                ('metauserProfileLogo', models.ImageField(default='https://bdgdaostorage.blob.core.windows.net/media/bodegaLogoBackend.jpeg', upload_to='')),
                ('subscribersNumber', models.IntegerField(default=0)),
                ('followersNumber', models.IntegerField(default=0)),
                ('subscriptionActive', models.BooleanField(default=False)),
                ('accessLevelClearance', models.FloatField(default=3.5)),
                ('isProfilePrivate', models.BooleanField(default=False)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_body', models.TextField()),
                ('upload_file', models.FileField(default=None, upload_to='user_meta_key/message/files')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('hashkey', models.TextField(default=backend.models.message_hashkey_generator, unique=True)),
                ('chat_room_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.chatroom')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='metauserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser'),
        ),
        migrations.AddField(
            model_name='discount',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser'),
        ),
        migrations.AddField(
            model_name='customerpayment',
            name='metauserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser'),
        ),
        migrations.CreateModel(
            name='creatorSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriptionName', models.CharField(max_length=300)),
                ('subscriptionDescription', models.CharField(max_length=500)),
                ('amount', models.IntegerField(default=0)),
                ('currency', models.CharField(max_length=255)),
                ('chargingFrequency', models.CharField(max_length=300)),
                ('stripeProductID', models.CharField(max_length=400)),
                ('stripePriceID', models.CharField(max_length=400)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='Your campaign definition')),
                ('description', models.TextField(default='Describe your campaign')),
                ('creator_collab_choice', models.TextField(choices=[('FIXED-PAYMENT', 'FIXED-PAYMENT'), ('COMMISSION-%-ON-SALES', 'COMMISSION-%-ON-SALES'), ('FREE-HELP-FROM-THE-COMMUNITY', 'FREE-HELP-FROM-THE-COMMUNITY')])),
                ('creator_pitch', models.TextField()),
                ('bid_type', models.TextField(choices=[('FIXED-PAYMENT', 'FIXED-PAYMENT'), ('COMMISSION-%-ON-SALES', 'COMMISSION-%-ON-SALES'), ('FREE-HELP-FROM-THE-COMMUNITY', 'FREE-HELP-FROM-THE-COMMUNITY')])),
                ('bid_amount', models.FloatField(default=0.0)),
                ('accept_bid', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('shop_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shop')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('product_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product')),
                ('session_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shoppingsession')),
            ],
        ),
        migrations.AddField(
            model_name='boosttags',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser'),
        ),
        migrations.AddField(
            model_name='bodegavision',
            name='metauserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser'),
        ),
        migrations.CreateModel(
            name='BodegaPersonalizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.CreateModel(
            name='BodegaFace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facial_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.AddField(
            model_name='bodegadept',
            name='metauserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser'),
        ),
        migrations.CreateModel(
            name='BodegaCognitivePerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
                ('profileID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.sentinoprofile')),
                ('self_descriptionID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.sentinoselfdescription')),
            ],
        ),
        migrations.CreateModel(
            name='BodegaCognitiveItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('classificationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.sentinoitemclassification')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
                ('projectionID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.sentinoitemprojection')),
                ('proximityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.sentinoitemproximity')),
            ],
        ),
        migrations.CreateModel(
            name='BodegaCognitiveInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_statements', models.JSONField(blank=True, null=True)),
                ('content_metadata', models.JSONField(blank=True, null=True)),
                ('syslog_metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('inventoryID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.sentinoinventory')),
                ('metauserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.metauser')),
            ],
        ),
        migrations.AddField(
            model_name='blascore',
            name='levelID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.level'),
        ),
        migrations.AddField(
            model_name='blascore',
            name='metauserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.metauser'),
        ),
    ]
